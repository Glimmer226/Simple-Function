import json
import sys
import os
import urllib2
from optparse import OptionParser

"""
This script is designed to post test result to qahome using 'result.json',
which is genrated by run_scenarios.py
"""
def update_result(tc_id,test_result,client,server,user,build_ver,tag):
    tag=tag.replace(" ","")
    url = "http://qahome.avamar.com/server_test/add_result.php?tcID=%s&passfail=%s&client=%s&server=%s&user=%s&buildver=%s&test_duration=10&tag=%s&bugid=&" %\
            (tc_id,test_result,client,server,user,build_ver,tag)
    try:
        response = urllib2.urlopen(url)
        code=response.code
#         message=response.read()
        if code==200:
            return True
    except urllib2.HTTPError, e:
        print e.code
    return False

def update_result_json(test_result,user,tag):
    build_ver=test_result["build_version"]
    host_name=test_result["host_name"]
    result=test_result["test_result"]
    for scenario, scenario_result in result.items():
        for tc_result in scenario_result:
            tc_id=tc_result["tc_id"]
            test_result=tc_result["test_result"]
            if test_result=="PASSED":
                test_result="pass"
            elif test_result=="FAILED":
                test_result="fail"
            if tc_id:
                print "Post result for test case '%s', test result '%s'"%(tc_id,test_result)
                res= update_result(tc_id,test_result,host_name,host_name,user,build_ver,tag)
                if res:
                    print "Successful"
                else:
                    print "failed"
            
def main():
    OpParser = OptionParser()
    OpParser.add_option("-f", "--json-file", action="store", type="string",
                      dest="json_file",
                      help="Specify json file whcih generated by run_scenarios.py")
    OpParser.add_option("-u", "--user", action="store", type="string",
                      dest="user",
                      help="Specify qahome user")
    OpParser.add_option("-t", "--tag", action="store", type="string",
                      dest="tag",
                      help="Specify testcase tag")
    options = OpParser.parse_args()[0]
    json_file=options.json_file
    user= options.user
    tag= options.tag
    if not json_file or not os.path.isfile(json_file) or not user or not tag:
        sys.exit(1)
    test_result = json.load(open(json_file,'r'))
    update_result_json(test_result,user,tag)
    
if __name__=="__main__":
    main()
#     print update_result(908,"pass","a4ipn603","a4ipn603","zouk","7.5.0.169","proj:ipv6")

